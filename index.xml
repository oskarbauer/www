<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Plugging Things to experience the Internet on plgd</title><link>https://next.plgd.dev/</link><description>Recent content in Plugging Things to experience the Internet on plgd</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 02 Mar 2017 12:00:00 -0500</lastBuildDate><atom:link href="https://next.plgd.dev/index.xml" rel="self" type="application/rss+xml"/><item><title>plgd Documentation</title><link>https://next.plgd.dev/documentation/</link><pubDate>Mon, 03 May 2021 00:00:00 +0000</pubDate><guid>https://next.plgd.dev/documentation/</guid><description>Introduction What are the biggest problems in IoT? Where do current market IoT solutions fall short? How should IoT be considered?
Put another way, &amp;ldquo;What are the most common issues preventing companies from fully realizing the benefits of IoT?&amp;quot; This question was answered at DZone by 23 executives involved with the Internet of Things.
Observations:
Companies are not able, or do not have the talent, to complete the end-to-end solution.</description></item><item><title>Authorization</title><link>https://next.plgd.dev/developing/authorization/</link><pubDate>Fri, 15 Nov 2019 00:00:00 +0000</pubDate><guid>https://next.plgd.dev/developing/authorization/</guid><description>Authorization Using external OAuth Server with bundle Even though the bundle start core plgd services as processes in a single container, a user has still a possibility to configure most of the services parameters. For testing purposes, the external OAuth Server (e.g. Auth0) can be set up. To skip internal mocked OAuth Server and switch to your external one, configure following environment variables:
OAUTH_AUDIENCE:https://api.example.comOAUTH_ENDPOINT_AUTH_URL:https://auth.example.com/authorizeOAUTH_ENDPOINT_TOKEN_URL:https://auth.example.com/oauth/tokenOAUTH_ENDPOINT:auth.example.comJWKS_URL:https://auth.example.com/.well-known/jwks.jsonOAUTH_CLIENT_ID:ij12OJj2J23K8KJsOAUTH_CLIENT_SECRET:654hkja12asd123dSERVICE_OAUTH_CLIENT_ID:412dsFf53Sj6$SERVICE_OAUTH_CLIENT_SECRET:235Jgdf65jsd4ShlsOWNER_CLAIM:subHow to configure Auth0 Assuming you have an account in the Auth0 OAuth as a service, you need to create 2 Applications and one API.</description></item><item><title>Dashboard</title><link>https://next.plgd.dev/developing/dashboard/</link><pubDate>Fri, 15 Nov 2019 00:00:00 +0000</pubDate><guid>https://next.plgd.dev/developing/dashboard/</guid><description>PLGD Dashboard Building Requirements nodejs Configuration Configuration for the client can be found in ./http-gateway/web/src/auth_config.json.
{ &amp;#34;domain&amp;#34;: &amp;#34;auth.plgd.cloud&amp;#34;, &amp;#34;clientID&amp;#34;: &amp;#34;pHdCKhnpgGEtU7KAPcLYCoCAkZ4cYVZg&amp;#34;, &amp;#34;audience&amp;#34;: &amp;#34;https://try.plgd.cloud&amp;#34;, &amp;#34;scope&amp;#34;: &amp;#34;&amp;#34;, &amp;#34;httpGatewayAddress&amp;#34;: &amp;#34;https://api.try.plgd.cloud&amp;#34; } Installation $ npm install Starting the development server $ npm start Application will be hosted on http://localhost:3000 by default. To change the default port, put PORT=xxxx into package.json script for starting the development server
cross-env PORT=3000 craco start or set PORT into your environment variables.</description></item><item><title>gRPC Client</title><link>https://next.plgd.dev/developing/grpc-client/</link><pubDate>Fri, 15 Nov 2019 00:00:00 +0000</pubDate><guid>https://next.plgd.dev/developing/grpc-client/</guid><description>Working with GRPC Client What it GRPC Please follow link
How to create GRPC client for grpc-gateway For creating grpc-client you need to generate a code for your language from proto files, which are stored at cloud.
API All requests to service must contains valid access token in grpc metadata.
::: warning Each request to the gRPC Gateway shall contain a valid access token as a part of the grpc metadata.</description></item><item><title>Onboard</title><link>https://next.plgd.dev/functions/2-onboard/</link><pubDate>Fri, 15 Nov 2019 00:00:00 +0000</pubDate><guid>https://next.plgd.dev/functions/2-onboard/</guid><description>2. Onboard Device plgd Cloud provide allow you to start</description></item><item><title>Resources</title><link>https://next.plgd.dev/developing/resources/</link><pubDate>Fri, 15 Nov 2019 00:00:00 +0000</pubDate><guid>https://next.plgd.dev/developing/resources/</guid><description>Working with Resources Creating Resources Description Device with collection resource allows dynamic creation of resources. The created resource can only be of a well defined type (see call to oc_collections_add_rt_factory in Guide) and all created resources are contained within the collection.
Guide To develop your own device you can examine the example in cloud_server. Lets examine the example to identify the necessary steps that allow a device to dynamically create resources on a collection.</description></item><item><title>v2 in progress</title><link>https://next.plgd.dev/news/version2-inprogress/</link><pubDate>Tue, 02 Feb 2021 00:00:00 +0000</pubDate><guid>https://next.plgd.dev/news/version2-inprogress/</guid><description>We are receiving many questions about the ongoing plgd activities. If you are looking at the master branch, you might be asking why we didn&amp;rsquo;t commit anything for the last weeks?
It&amp;rsquo;s because we are havily working on the plgd cloud 2.0! There will be more detailed post about new features and changes, but to give you some insights into what you can expect:
rapid memory optimization optimized device connection handling new event store model designed together with the MongoDB team optimized database writes and commands handling service configuration in YAML files deployment using a HELM chart plgd Dashboard and much more &amp;hellip;</description></item><item><title>plgd bundle available</title><link>https://next.plgd.dev/news/bundle-available/</link><pubDate>Thu, 21 Jan 2021 00:00:00 +0000</pubDate><guid>https://next.plgd.dev/news/bundle-available/</guid><description>As you&amp;rsquo;ve might already experienced, the plgd cloud consist of a few scalable services which are in the production environment deployed and scaled independently. This deployment complexity is very often a pain point for device developers who are using the plgd cloud just to verify their device API implementation and its behavior.
To make the experience with the usage of the plgd cloud perfect to everyone, we have created a new package - plgd bundle docker container which bundles all plgd core services and more:</description></item><item><title>First certified Cloud-to-Cloud solution</title><link>https://next.plgd.dev/news/ocf-first-certified-cloud/</link><pubDate>Wed, 26 Aug 2020 00:00:00 +0000</pubDate><guid>https://next.plgd.dev/news/ocf-first-certified-cloud/</guid><description>Just few days after releasing new OCF Universal Cloud Interface, first OCF Member Haier Group certifies their IoT cloud solution. Certification tool used by the OCF as well as the robustness of the OCF UCI specification is verified by the publicly announced reference implementation plgd!
Yes, we are now officialy part of this, making the IoT more secure and available to all of you! Read more on businesswire!</description></item><item><title>OCF Cloud2Cloud white paper</title><link>https://next.plgd.dev/news/ocf-c2c-whitepaper/</link><pubDate>Thu, 20 Aug 2020 00:00:00 +0000</pubDate><guid>https://next.plgd.dev/news/ocf-c2c-whitepaper/</guid><description>An interoperable IoT platform needs to support multiple communication protocols and be secure by default, as well as resilient, scalable and support multitenancy. Reference implementation &amp;ldquo;plgd&amp;rdquo; (pronounced &amp;ldquo;plugged&amp;rdquo;), available at https://github.com/plgd-dev/cloud, is a cloud native IoT platform which fulfils the above needs and more.
This and much more was written by the Open Connectivity Foundation about us in just recently published OCF UCI white paper!</description></item><item><title>Interact</title><link>https://next.plgd.dev/functions/3-interact/</link><pubDate>Fri, 15 Nov 2019 00:00:00 +0000</pubDate><guid>https://next.plgd.dev/functions/3-interact/</guid><description>3. Interact plgd Cloud provide allow you to start</description></item><item><title>1-Deploy</title><link>https://next.plgd.dev/functions/1-deploy/</link><pubDate>Wed, 01 Feb 2017 00:00:00 +0000</pubDate><guid>https://next.plgd.dev/functions/1-deploy/</guid><description>1. Deploy plgd Cloud There are multiple options how to start using / testing the plgd Cloud. If you&amp;rsquo;re just trying to get in touch with this Cloud Native IoT framework, jump right to the [try.plgd.cloud](#Try plgd.cloud) instance and onboard your device right away. In case you want to get in touch with the system localy and you have the Docker installed, use our plgd cloud #Bundle. ::: tip Join us!</description></item><item><title/><link>https://next.plgd.dev/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://next.plgd.dev/readme/</guid><description>Introduction What are the biggest problems in IoT? Where do current market IoT solutions fall short? How should IoT be considered?
Put another way, &amp;ldquo;What are the most common issues preventing companies from fully realizing the benefits of IoT?&amp;quot; This question was answered at DZone by 23 executives involved with the Internet of Things.
Observations:
Companies are not able, or do not have the talent, to complete the end-to-end solution.</description></item></channel></rss>
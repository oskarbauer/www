<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>fundamentals on plgd</title><link>https://next.plgd.dev/categories/fundamentals/</link><description>Recent content in fundamentals on plgd</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 15 Nov 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://next.plgd.dev/categories/fundamentals/index.xml" rel="self" type="application/rss+xml"/><item><title>Authorization</title><link>https://next.plgd.dev/developing/authorization/</link><pubDate>Fri, 15 Nov 2019 00:00:00 +0000</pubDate><guid>https://next.plgd.dev/developing/authorization/</guid><description>Authorization Using external OAuth Server with bundle Even though the bundle start core plgd services as processes in a single container, a user has still a possibility to configure most of the services parameters. For testing purposes, the external OAuth Server (e.g. Auth0) can be set up. To skip internal mocked OAuth Server and switch to your external one, configure following environment variables:
OAUTH_AUDIENCE:https://api.example.comOAUTH_ENDPOINT_AUTH_URL:https://auth.example.com/authorizeOAUTH_ENDPOINT_TOKEN_URL:https://auth.example.com/oauth/tokenOAUTH_ENDPOINT:auth.example.comJWKS_URL:https://auth.example.com/.well-known/jwks.jsonOAUTH_CLIENT_ID:ij12OJj2J23K8KJsOAUTH_CLIENT_SECRET:654hkja12asd123dSERVICE_OAUTH_CLIENT_ID:412dsFf53Sj6$SERVICE_OAUTH_CLIENT_SECRET:235Jgdf65jsd4ShlsOWNER_CLAIM:subHow to configure Auth0 Assuming you have an account in the Auth0 OAuth as a service, you need to create 2 Applications and one API.</description></item><item><title>Dashboard</title><link>https://next.plgd.dev/developing/dashboard/</link><pubDate>Fri, 15 Nov 2019 00:00:00 +0000</pubDate><guid>https://next.plgd.dev/developing/dashboard/</guid><description>PLGD Dashboard Building Requirements nodejs Configuration Configuration for the client can be found in ./http-gateway/web/src/auth_config.json.
{ &amp;#34;domain&amp;#34;: &amp;#34;auth.plgd.cloud&amp;#34;, &amp;#34;clientID&amp;#34;: &amp;#34;pHdCKhnpgGEtU7KAPcLYCoCAkZ4cYVZg&amp;#34;, &amp;#34;audience&amp;#34;: &amp;#34;https://try.plgd.cloud&amp;#34;, &amp;#34;scope&amp;#34;: &amp;#34;&amp;#34;, &amp;#34;httpGatewayAddress&amp;#34;: &amp;#34;https://api.try.plgd.cloud&amp;#34; } Installation $ npm install Starting the development server $ npm start Application will be hosted on http://localhost:3000 by default. To change the default port, put PORT=xxxx into package.json script for starting the development server
cross-env PORT=3000 craco start or set PORT into your environment variables.</description></item><item><title>gRPC Client</title><link>https://next.plgd.dev/developing/grpc-client/</link><pubDate>Fri, 15 Nov 2019 00:00:00 +0000</pubDate><guid>https://next.plgd.dev/developing/grpc-client/</guid><description>Working with GRPC Client What it GRPC Please follow link
How to create GRPC client for grpc-gateway For creating grpc-client you need to generate a code for your language from proto files, which are stored at cloud.
API All requests to service must contains valid access token in grpc metadata.
::: warning Each request to the gRPC Gateway shall contain a valid access token as a part of the grpc metadata.</description></item><item><title>Onboard</title><link>https://next.plgd.dev/functions/2-onboard/</link><pubDate>Fri, 15 Nov 2019 00:00:00 +0000</pubDate><guid>https://next.plgd.dev/functions/2-onboard/</guid><description>2. Onboard Device plgd Cloud provide allow you to start</description></item><item><title>Resources</title><link>https://next.plgd.dev/developing/resources/</link><pubDate>Fri, 15 Nov 2019 00:00:00 +0000</pubDate><guid>https://next.plgd.dev/developing/resources/</guid><description>Working with Resources Creating Resources Description Device with collection resource allows dynamic creation of resources. The created resource can only be of a well defined type (see call to oc_collections_add_rt_factory in Guide) and all created resources are contained within the collection.
Guide To develop your own device you can examine the example in cloud_server. Lets examine the example to identify the necessary steps that allow a device to dynamically create resources on a collection.</description></item><item><title>Interact</title><link>https://next.plgd.dev/functions/3-interact/</link><pubDate>Fri, 15 Nov 2019 00:00:00 +0000</pubDate><guid>https://next.plgd.dev/functions/3-interact/</guid><description>3. Interact plgd Cloud provide allow you to start</description></item></channel></rss>
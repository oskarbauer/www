<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>quickstart on plgd</title><link>https://plgd.dev/categories/quickstart/</link><description>Recent content in quickstart on plgd</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 09 Jul 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://plgd.dev/categories/quickstart/index.xml" rel="self" type="application/rss+xml"/><item><title>Contribute</title><link>https://plgd.dev/quickstart/contribute/</link><pubDate>Fri, 09 Jul 2021 00:00:00 +0000</pubDate><guid>https://plgd.dev/quickstart/contribute/</guid><description>This guide will describe how to setup your environment to enable contribution to development.
Development on Linux (Ubuntu 20.02+ LTS) Install Go a. Follow official golang installation guide. b. Use update-golang script.
Both options install golang to /usr/local/go. For everything to work correctly you must add path to go to your environment PATH variable. Add the following line to your $HOME/.profile file.
export PATH=$PATH:/usr/local/go/bin (Restart may be needed for the changes in the .</description></item><item><title>Discover &amp; control device locally</title><link>https://plgd.dev/quickstart/device-to-device/</link><pubDate>Mon, 14 Jun 2021 00:00:00 +0000</pubDate><guid>https://plgd.dev/quickstart/device-to-device/</guid><description>This guide will walk you through the process of discovering, on-boarding, controlling your secure OCF Device using plgd/device library on your PC.
Prerequisite The Cloud Server runs on your Raspberry Pi Install OCF Client example Checkout plgd/device library:
# execute commands on your PC git clone -b main https://github.com/plgd-dev/device.git --recursive cd device Build OCF Client example:
cd cmd/ocfclient go build Run OCF Client example in the same folder:</description></item><item><title>Control device remotely</title><link>https://plgd.dev/quickstart/device-to-hub/</link><pubDate>Thu, 13 May 2021 00:00:00 +0000</pubDate><guid>https://plgd.dev/quickstart/device-to-hub/</guid><description>try.plgd.cloud To try the plgd hub without downloading a single docker container, try.plgd.cloud instance is available for you for free. To onboard any IoTivitiy-Lite or any OCF standardized device to the plgd hub, the mobile application plgd is available for you in both, Apple and Google Play stores.
It&amp;rsquo;s simple as 1-2-3. Install, discover, onboard!</description></item><item><title>Create device</title><link>https://plgd.dev/quickstart/create-device/</link><pubDate>Thu, 13 May 2021 00:00:00 +0000</pubDate><guid>https://plgd.dev/quickstart/create-device/</guid><description>This guide will walk you through the process of starting your secure OCF Device using IoTivity library on the Raspberry Pi.
Requirements Raspberry Pi board with a microSD card with Raspberry Pi OS Optional: HDMI monitor and cable, USB keyboard and mouse for the Pi Ethernet or Wi-Fi connection between a DHCP-enabled network and the Pi Personal computer(Linux/MacOS recommended) on the same network as the Pi Setting up the Raspberry Pi To set up your Raspberry Pi, please follow this step-by-step tutorial.</description></item><item><title>Create first plgd application</title><link>https://plgd.dev/quickstart/create-plgd-app/</link><pubDate>Thu, 13 May 2021 00:00:00 +0000</pubDate><guid>https://plgd.dev/quickstart/create-plgd-app/</guid><description/></item><item><title>Deploy your own plgd hub</title><link>https://plgd.dev/quickstart/deploy-plgd-hub/</link><pubDate>Thu, 13 May 2021 00:00:00 +0000</pubDate><guid>https://plgd.dev/quickstart/deploy-plgd-hub/</guid><description>There are multiple ways how to start using / testing the plgd hub on your own infrastructure. If you&amp;rsquo;re just trying to get in touch with this IoT framework, go back to Control device remotely tutorial and use our free try.plgd.cloud instance. In case you want to get in touch with the system localy and you have the Docker installed, use our plgd hub #Bundle.
Deployment using helm chart is in progress.</description></item></channel></rss>